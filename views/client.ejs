<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="http://localhost:3000/socket.io/socket.io.js"></script>
  <title>Client Chat</title>
</head>
<body>
  <form id="nicknameForm">
    <input id="userNickname" type="text" placeholder="Insira seu nickname"/>
    <button id="btnNickname">Salvar</button>
  </form>
  <div>
    <ul id="nicknames"></ul>
  </div>
  <form id="messageForm">
    <input id="messageUser" type="text" placeholder="Digite uma nova mensagem aqui..."/>
    <button>Enviar</button>
  </form>
  <div id="messages">
    <ul></ul>
  <div>
    <script>
      const socket = io()
      const formMessage = document.querySelector('#messageForm');
      const userMessage = document.querySelector('#messageUser');

      const formNickname = document.querySelector('#nicknameForm');
      const userNickname = document.querySelector('#userNickname');

      formNickname.addEventListener('submit', (e) => {
        e.preventDefault();
        socket.emit('nickname', userNickname.value); // enviar o nome para o servidor. ex: jonas
        userNickname.value = '';
        return false;
      })

      const createNickName = (nickname) => {
        const nicknameUl = document.querySelector('#nicknames');
        const li = document.createElement('li');
        li.innerText = nickname;
        nicknameUl.appendChild(li);
      }

      formMessage.addEventListener('submit', (e) => {
        e.preventDefault();
        const nick = socket.id.substring(0, 16);
        socket.emit('message', { chatMessage:userMessage.value, nickname: nick }); // aqui ele envia a mensagem da caixa de dialogo para o servidor.
        userMessage.value = '';
        return false
      })

      const createMessage = (message) => {
        const messageUl = document.querySelector('#messages');
        const li = document.createElement('li');
        console.log(message)
        li.innerText = message
        messageUl.appendChild(li);
      }

      socket.on('serverNickname', ({ nickname }) => createNickName(nickname));
      socket.on('message', (message) => createMessage(message)); // e aqui ele escuta a resposta do servidor da msg da caixa de dialago.

      // window.onbeforeunload = () => {
      //   socket.disconnect();
      // }; 
    </script>
  </div>
</body>
</html>