<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <script src="http://localhost:3000/socket.io/socket.io.js"></script>
    <title>Trybe - Project: WebChat</title>
  </head>
  <body>
    <h1>CHAT-SOCKET</h1>
    <section>
      <div>
        <input id="input-name" type="text" placeholder="Type Nickname Here" data-testid="nickname-box" style="font-size: 20px">
        <button id="btn-change" data-testid="nickname-button" style="font-size: 20px">Change Nickname</button>
      </div>
      <div>
        <p>Users Online:</p>
        <ul id="users"></ul>
      </div>
    </section>
    <section>
      <p>Messages:</p>
      <input id="input-msg" type="text" placeholder="Type Message Here" data-testid="message-box" style="font-size: 20px">
      <button id="btn-msg" data-testid="send-button" style="font-size: 20px">Send Mensagem</button>
      <ul id="chat">
        <% messages.forEach((mensage) => {%>
          <li data-testid="message">
            <%= mensage %>
          </li>
        <%})%>
      </ul>
    </section>
    <script>
      const TESTID = 'data-testid'
      const USER_ONLINE = 'online-user'
      const MESSAGE = 'message'
      const socket = io('http://localhost:3000');
      
      // Envia mensagem para servidor
      document.getElementById('btn-msg').addEventListener('click', () => {
        const inputMsn = document.getElementById('input-msg')
        const nickname = document.getElementById('actual_user').innerText;
        const chatMessage = inputMsn.value;
        console.log(chatMessage, nickname);

        //* Emit para servidor o evento 'message'
        socket.emit('message', { chatMessage, nickname });
        inputMsn.value=''; // limpa input
      });

      //* Muda nome o usuário
      document.getElementById('btn-change').addEventListener('click', () => {
        const inputChangeNickname = document.getElementById('input-name');

        //* Emite servidor evento onlineUsers
        socket.emit('onlineUsers', { id: socket.id, nickname: inputChangeNickname.value });
        inputChangeNickname.value=''; // limpa imput
      });

      //* Recebe mensagem do servidor e injeta na página
      socket.on('message', (mensagem) => {
        const chat = document.getElementById('chat');
        const newMsg = document.createElement('li');
        newMsg.innerText = mensagem;
        newMsg.setAttribute(TESTID, MESSAGE);
        chat.appendChild(newMsg);
      });

      //* Clienta na escuta pelo evento 'onlineUsers'
      //* Função é colocar os clientes que estão online numa lista injetada na página
      socket.on('onlineUsers', (onlineUsers) => {
        //* acha o cliente pelo socket.id
        console.log(onlineUsers)
        const user = onlineUsers.find(({ id }) => id === socket.id); // id e nickname
        const listUsersOnline = document.getElementById('users');
        listUsersOnline.innerHTML = '';
        const newUser = document.createElement('li');
        newUser.innerText = user.nickname;
        newUser.setAttribute(TESTID, USER_ONLINE);
        newUser.id = 'actual_user'; // adiciona atributo id='actula_user'
        listUsersOnline.appendChild(newUser);

        //* renderiza todos os outros usuários online
        onlineUsers.forEach(({ id, nickname }) => {
          if (id !== socket.id) {
            const newUser = document.createElement('li');
            newUser.innerText = nickname;
            newUser.setAttribute(TESTID, USER_ONLINE);
            listUsersOnline.appendChild(newUser);
          }
        });
      });

    </script>
  </body>
</html>