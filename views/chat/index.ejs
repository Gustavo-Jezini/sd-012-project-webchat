<!DOCTYPE html>

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>WebChat</title>
  <style>
    * {
      box-sizing: border-box;
      font-family: 'Ubuntu';
      margin: 0;
    }

    li {
      margin-bottom: 5px;
      margin-top: 5px;
    }

    .main {
      background-color: rgb(238, 238, 238);
      height: 100vh;
    }

    .main-container {
      display: flex;
      justify-content: center;
    }

    .user {
      display: flex;
      flex-direction: column;
      width: 40%;
    }

    .user input {
      width: 75%;
    }

    .users {
      background-color: rgb(247, 247, 247);
    }

    .users li:nth-child(odd) {
      background-color: rgb(68, 134, 88);
      color: aliceblue;
    }

    .message {
      background-color: rgb(247, 247, 247);
      display: flex;
      height: 100vh;
      width: 60%;
    }

    .messages li:nth-child(odd) {
      background-color: rgb(203, 255, 203);
    }

    .footer {
      display: flex;
      position: fixed;
      bottom: 0%;
      width: 100%;
    }

    .footer input {
      width: 100%;
    }


  </style>
</head>
<body>
  <form class="main" action="">
    <div class="main-container">
      <div class="user">
        <div>
          <input class="nickname-input" data-testid="nickname-box" type="text" placeholder="Insira seu nickname">
          <button class="nickname-button" data-testid="nickname-button" type="button">Salvar</button>
        </div>
        <div>
          <ul class="users">
          </ul>
        </div>
      </div>
      <div class="message">
        <ul class="messages">
          <% history.forEach((message) => { %>
            <li data-testid="message"><%= message.full %></li>
          <% }) %>
        </ul>
      </div>
    </div>
    <div class="footer">
      <input data-testid="message-box" class="input-message" type="text" placeholder="Digite uma nova mensagem aqui">
      <button data-testid="send-button" type="submit">Enviar</button>
    </div>
  </form>
</body>
<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = window.io();

  const random = () => {
    return Math.random();
  }

  const createNickName = () => {
    return `User-${random().toString(16).slice(4)}`;
  };

  let nickname = createNickName();

  const setNickname = (nick) => {
    nickname = nick
    const usersUl = document.querySelector('.users');
    const li = document.createElement('li');
    li.innerText = nick;
    li.setAttribute('data-testid', 'online-user');
    usersUl.appendChild(li);
  };

  socket.emit('login', nickname);

  socket.emit('connection');
  const form = document.querySelector('form');
  const inputMessage = document.querySelector('.input-message');
  const nicknameButton = document.querySelector('.nickname-button');
  const inputNickname = document.querySelector('.nickname-input');

  const createMessage = (message) => {
    const messagesUl = document.querySelector('.messages');
    const li = document.createElement('li');
    li.innerText = message;
    li.setAttribute('data-testid', 'message');
    messagesUl.appendChild(li);
  };


  nicknameButton.addEventListener('click', (e) => {
    socket.emit('changeNickname', { nickname: inputNickname.value });
    inputNickname.innerText = '';
    return false;
  });

  form.addEventListener('submit', (e) => {
    e.preventDefault();
    socket.emit('message', { chatMessage: inputMessage.value, nickname });
    inputMessage.value = '';
    return false;
  });

  socket.on('serverMessage', (message) => createMessage(message));
  socket.on('setNickname', (nicknama) => setNickname(nickname));
  socket.on('newNickname', (updatedNick) => setNickname(updatedNick));
</script>

</html>